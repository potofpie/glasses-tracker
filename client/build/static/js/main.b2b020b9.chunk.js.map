{"version":3,"sources":["components/Sections/Add/Add.js","components/HomePage/HomePage.js","components/Sections/Search/Search.js","components/NewHomePage/css.js","components/NewHomePage/NewHomePage.js","resources/glasses.svg","components/CustomIcons/GlassesIcon.js","resources/G_Logo.png","components/CustomIcons/GoogleIcon.js","components/AuthenticationPages/Login/Login.js","components/AuthenticationPages/SignUp/SignUp.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","skuTextControl","flex","skuformControl","justifyContent","margin","spacing","minWidth","width","formControl","selectEmpty","marginTop","Add","className","TextField","style","id","label","variant","Button","Autocomplete","options","renderInput","params","display","color","drawerWidth","listItemDisable","pointerEvents","root","usersSection","height","alignItems","flexDirection","backgroundColor","paddingTop","paddingBottom","paddingLeft","paddingRight","orgSection","appBar","purple","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","content","flexGrow","overflowX","contentShift","RenderAppSection","appSection","PersistentDrawerLeft","classes","useTheme","React","useState","open","setOpen","setAppSection","handleSidePannelClick","e","console","log","target","textContent","key","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Typography","noWrap","Drawer","anchor","docked","paper","direction","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","disabled","Search","zIndex","whiteColor","whiteSpace","drawerOpen","drawerClose","breakpoints","up","NewHomePage","Select","value","icon","Avatar","GlassesIcon","props","src","glasses","size","googleIcon","Login","FormControl","InputLabel","htmlFor","OutlinedInput","startAdornment","InputAdornment","labelWidth","type","startIcon","GoogleIcon","Link","href","SignUp","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2b020b9.chunk.js","sourcesContent":["import './Add.css';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  skuTextControl: {\n    flex: 1,\n  },\n  skuformControl: {\n    // display: 'flex',\n    // flexDirection: 'row', \n    justifyContent: 'space-between',\n    margin: theme.spacing(1),\n    minWidth: 120,\n    width: '50%'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    width: '50%'\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction Add() {\n  const classes = useStyles();\n  return (\n    <div className=\"Add\">\n        <div className=\"Add-title\">\n          Add a new pair of glasses!\n        </div>\n      <TextField style={{ width: '50%', margin: '10px' }} id=\"outlined-basic\" label=\"SKU *\" variant=\"outlined\" />\n      <Button style={{ width: '50%', margin: '10px' }} variant='contained'>Generate</Button>\n      <Autocomplete\n        // value={value}\n        // onChange={(event, newValue) => {\n          // setValue(newValue);\n        // }}\n        // inputValue={inputValue}\n        // onInputChange={(event, newInputValue) => {\n          // setInputValue(newInputValue);\n        // }}\n        id=\"controllable-states-demo\"\n        options={['Child','Small','Medium','Large']}\n        style={{ width: '50%', margin: '10px' }}\n        renderInput={(params) => <TextField {...params} label=\"Size *\" variant=\"outlined\" />}\n      />\n      <Autocomplete\n        // value={value}\n        // onChange={(event, newValue) => {\n          // setValue(newValue);\n        // }}\n        // inputValue={inputValue}\n        // onInputChange={(event, newInputValue) => {\n          // setInputValue(newInputValue);\n        // }}\n        id=\"controllable-states-demo\"\n        options={['Male','Female','Unisex']}\n        style={{ width: '50%', margin: '10px' }}\n        renderInput={(params) => <TextField {...params} label=\"Gender *\" variant=\"outlined\" />}\n      />\n      <Autocomplete\n        // value={value}\n        // onChange={(event, newValue) => {\n          // setValue(newValue);\n        // }}\n        // inputValue={inputValue}\n        // onInputChange={(event, newInputValue) => {\n          // setInputValue(newInputValue);\n        // }}\n        id=\"controllable-states-demo\"\n        options={['Single','Bifocal']}\n        style={{ width: '50%', margin: '10px' }}\n        renderInput={(params) => <TextField {...params} label=\"Lens Type *\" variant=\"outlined\" />}\n      />\n      <Autocomplete\n        // value={value}\n        // onChange={(event, newValue) => {\n          // setValue(newValue);\n        // }}\n        // inputValue={inputValue}\n        // onInputChange={(event, newInputValue) => {\n          // setInputValue(newInputValue);\n        // }}\n        id=\"controllable-states-demo\"\n        options={['Yes','No']}\n        style={{ width: '50%', margin: '10px' }}\n        renderInput={(params) => <TextField {...params} label=\"Tint\" variant=\"outlined\" />}\n      />\n        <Autocomplete\n          // value={value}\n          // onChange={(event, newValue) => {\n            // setValue(newValue);\n          // }}\n          // inputValue={inputValue}\n          // onInputChange={(event, newInputValue) => {\n            // setInputValue(newInputValue);\n          // }}\n          id=\"controllable-states-demo\"\n          options={['Metal','Plastic']}\n          style={{ width: '50%', margin: '10px' }}\n          renderInput={(params) => <TextField {...params} label=\"Material\" variant=\"outlined\" />}\n        />\n      <div style={{display: 'flex', width: '50%',  }} >\n        <Autocomplete\n          // value={value}\n          // onChange={(event, newValue) => {\n            // setValue(newValue);\n          // }}\n          // inputValue={inputValue}\n          // onInputChange={(event, newInputValue) => {\n            // setInputValue(newInputValue);\n          // }}\n          id=\"controllable-states-demo\"\n          options={['Yes','No']}\n          style={{ width: '50%', margin: '10px' }}\n          renderInput={(params) => <TextField {...params} label=\"OS Sphere *\" variant=\"outlined\" />}\n        />\n              <Autocomplete\n          // value={value}\n          // onChange={(event, newValue) => {\n            // setValue(newValue);\n          // }}\n          // inputValue={inputValue}\n          // onInputChange={(event, newInputValue) => {\n            // setInputValue(newInputValue);\n          // }}\n          id=\"controllable-states-demo\"\n          options={['Yes','No']}\n          style={{ width: '50%', margin: '10px' }}\n          renderInput={(params) => <TextField {...params} label=\"OD Sphere *\" variant=\"outlined\" />}\n        />\n      </div>\n      <div style={{display: 'flex', width: '50%', }} >\n        <Autocomplete\n          // value={value}\n          // onChange={(event, newValue) => {\n            // setValue(newValue);\n          // }}\n          // inputValue={inputValue}\n          // onInputChange={(event, newInputValue) => {\n            // setInputValue(newInputValue);\n          // }}\n          id=\"controllable-states-demo\"\n          options={['Yes','No']}\n          style={{ width: '50%', margin: '10px' }}\n          renderInput={(params) => <TextField {...params} label=\"OS Cylinder *\" variant=\"outlined\" />}\n        />\n              <Autocomplete\n          // value={value}\n          // onChange={(event, newValue) => {\n            // setValue(newValue);\n          // }}\n          // inputValue={inputValue}\n          // onInputChange={(event, newInputValue) => {\n            // setInputValue(newInputValue);\n          // }}\n          id=\"controllable-states-demo\"\n          options={['Yes','No']}\n          style={{ width: '50%', margin: '10px' }}\n          renderInput={(params) => <TextField {...params} label=\"OD Cylinder *\" variant=\"outlined\" />}\n        />\n      </div>\n      <div style={{display: 'flex', width: '50%' }} >\n        <Autocomplete\n          // value={value}\n          // onChange={(event, newValue) => {\n            // setValue(newValue);\n          // }}\n          // inputValue={inputValue}\n          // onInputChange={(event, newInputValue) => {\n            // setInputValue(newInputValue);\n          // }}\n          id=\"controllable-states-demo\"\n          options={['Yes','No']}\n          style={{ width: '50%', margin: '10px' }}\n          renderInput={(params) => <TextField {...params} label=\"OS Axis *\" variant=\"outlined\" />}\n        />\n              <Autocomplete\n          // value={value}\n          // onChange={(event, newValue) => {\n            // setValue(newValue);\n          // }}\n          // inputValue={inputValue}\n          // onInputChange={(event, newInputValue) => {\n            // setInputValue(newInputValue);\n          // }}\n          id=\"controllable-states-demo\"\n          options={['Yes','No']}\n          style={{ width: '50%', margin: '10px' }}\n          renderInput={(params) => <TextField {...params} label=\"OD Axis *\" variant=\"outlined\" />}\n        />\n      </div>\n      <div style={{display: 'flex', width: '50%', }} >\n        <Autocomplete\n          // value={value}\n          // onChange={(event, newValue) => {\n            // setValue(newValue);\n          // }}\n          // inputValue={inputValue}\n          // onInputChange={(event, newInputValue) => {\n            // setInputValue(newInputValue);\n          // }}\n          id=\"controllable-states-demo\"\n          options={['Yes','No']}\n          style={{ width: '50%', margin: '10px' }}\n          renderInput={(params) => <TextField {...params} label=\"OD Add *\" variant=\"outlined\" />}\n        />\n        <Autocomplete\n          // value={value}\n          // onChange={(event, newValue) => {\n            // setValue(newValue);\n          // }}\n          // inputValue={inputValue}\n          // onInputChange={(event, newInputValue) => {\n            // setInputValue(newInputValue);\n          // }}\n          id=\"controllable-states-demo\"\n          options={['Yes','No']}\n          style={{ width: '50%', margin: '10px' }}\n          renderInput={(params) => <TextField {...params} label=\"OS Add *\" variant=\"outlined\" />}\n        />\n\n      </div>\n      {/* <div style={{display: 'flex', width: '50%', margin: '10px' }} > */}\n      <Button style={{ width: '50%', margin: '10px' }} color='primary' variant='contained' >Save </Button>\n      <Button style={{ width: '50%', margin: '10px' }} color='secondary' variant='contained' >Cancel</Button>\n      {/* </div> */}\n    </div>\n  );\n}\n\nexport default Add;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport purple from '@material-ui/core/colors/purple';\nimport {Add} from '../Sections/Add';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport BusinessIcon from '@material-ui/icons/Business';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  listItemDisable: {\n    'MuiListItemIcon-root': {\n      pointerEvents: 'none',\n    },\n    'MuiListItemIcon-alignItemsFlexStart': {\n      pointerEvents: 'none',\n\n    }\n  },\n  root: {\n    display: 'flex',\n    width: '100%'\n  },\n  usersSection: {\n    display: 'flex',\n    height: '48px',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    backgroundColor: '#f5f5f5',\n    paddingTop: '8px',\n    paddingBottom: '8px',\n    paddingLeft: '16px',\n    paddingRight: '16px'\n  \n  },\n  orgSection: {\n    display: 'flex',\n    height: '48px',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    flexDirection: 'row',\n    backgroundColor: '#f5f5f5',\n    paddingTop: '8px',\n    paddingBottom: '8px',\n    paddingLeft: '16px',\n    paddingRight: '16px'\n  \n  },\n  appBar: {\n    backgroundColor: purple[500],\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flex: 1,\n    flexGrow: 1,\n    overflowX: 'hidden',\n    // padding: theme.spacing(3),\n    paddingTop: '64px',\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nfunction RenderAppSection(appSection) {\n  switch (appSection) {\n    case 'Search':\n      return 'Search'\n      break;\n    case 'Add':\n      return <Add/>\n      break;\n    case 'Analysis':\n      return 'Analysis'\n      break;\n    case 'Profile':\n      return 'Profile'\n      break;\n    case 'Organization':\n      return 'Organization'\n      break;\n    case 'Admin Settings':\n      return 'Admin Settings'\n      break;\n    default:\n      return 'Error'\n      break;\n  }\n}\n\nexport default function PersistentDrawerLeft() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [appSection, setAppSection] = React.useState('Search');\n\n  const handleSidePannelClick = (e) => {\n    console.log(e);\n    console.log(e.target);\n    console.log(e.target.textContent);\n    console.log(e.target.id);\n    console.log(e.target.key);\n    setAppSection(e.target.textContent);\n  };\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n          <div><b>Glasses Tracker | </b>  {appSection} </div>   \n          \n          \n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        docked={false}\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <div className={classes.orgSection}>\n          <IconButton onClick={(e) => {setAppSection('Organization')}} ><BusinessIcon /></IconButton>\n          El Salvador Glasses\n        </div>\n        <Divider />\n        <div className={classes.usersSection}>\n          <IconButton onClick={(e) => {setAppSection('Profile')}} ><AccountCircleIcon/></IconButton>\n            bobby\n          <IconButton><ExitToAppIcon /></IconButton>\n        </div>\n        <Divider />\n        <List>\n            <ListItem button key='Search' onClick={handleSidePannelClick}>\n              <ListItemIcon className={classes.listItemDisable} ><SearchIcon /></ListItemIcon>\n              <ListItemText primary='Search' onClick={handleSidePannelClick}/>\n            </ListItem>\n            <ListItem button key='Add' onClick={handleSidePannelClick}>\n              <ListItemIcon><AddCircleOutlineIcon /></ListItemIcon>\n              <ListItemText primary='Add' />\n            </ListItem>\n            <ListItem button key='Analysis' onClick={handleSidePannelClick}>\n              <ListItemIcon ><AssessmentIcon /></ListItemIcon>\n              <ListItemText primary='Analysis' />\n            </ListItem>\n        </List>\n        <Divider />\n        <List>\n            <ListItem button key='Admin Settings' onClick={handleSidePannelClick}>\n              <ListItemIcon disabled ><SettingsIcon /></ListItemIcon>\n              <ListItemText disabled primary='Admin Settings' />\n            </ListItem>\n        </List>\n      </Drawer>\n      <div \n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n      {RenderAppSection(appSection)}\n        \n      </div>\n    </div>\n  );\n}\n","import './Search.css';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  skuTextControl: {\n    flex: 1,\n  },\n  skuformControl: {\n    // display: 'flex',\n    // flexDirection: 'row', \n    justifyContent: 'space-between',\n    margin: theme.spacing(1),\n    minWidth: 120,\n    width: '50%'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    width: '50%'\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction Search() {\n  const classes = useStyles();\n  return (\n    <div className=\"Add\">\n        <div className=\"Add-title\">\n          Search for the glasses!\n        </div>\n      {/* <TextField style={{ width: '50%', margin: '10px' }} id=\"outlined-basic\" label=\"SKU *\" variant=\"outlined\" /> */}\n      {/* <Button style={{ width: '50%', margin: '10px' }} variant='contained'>Generate</Button> */}\n      <Autocomplete\n        // value={value}\n        // onChange={(event, newValue) => {\n          // setValue(newValue);\n        // }}\n        // inputValue={inputValue}\n        // onInputChange={(event, newInputValue) => {\n          // setInputValue(newInputValue);\n        // }}\n        id=\"controllable-states-demo\"\n        options={['Child','Small','Medium','Large']}\n        style={{ width: '50%', margin: '10px' }}\n        renderInput={(params) => <TextField {...params} label=\"Size *\" variant=\"outlined\" />}\n      />\n      <Autocomplete\n        // value={value}\n        // onChange={(event, newValue) => {\n          // setValue(newValue);\n        // }}\n        // inputValue={inputValue}\n        // onInputChange={(event, newInputValue) => {\n          // setInputValue(newInputValue);\n        // }}\n        id=\"controllable-states-demo\"\n        options={['Male','Female','Unisex']}\n        style={{ width: '50%', margin: '10px' }}\n        renderInput={(params) => <TextField {...params} label=\"Gender *\" variant=\"outlined\" />}\n      />\n      <Autocomplete\n        // value={value}\n        // onChange={(event, newValue) => {\n          // setValue(newValue);\n        // }}\n        // inputValue={inputValue}\n        // onInputChange={(event, newInputValue) => {\n          // setInputValue(newInputValue);\n        // }}\n        id=\"controllable-states-demo\"\n        options={['Single','Bifocal']}\n        style={{ width: '50%', margin: '10px' }}\n        renderInput={(params) => <TextField {...params} label=\"Lens Type *\" variant=\"outlined\" />}\n      />\n      <Autocomplete\n        // value={value}\n        // onChange={(event, newValue) => {\n          // setValue(newValue);\n        // }}\n        // inputValue={inputValue}\n        // onInputChange={(event, newInputValue) => {\n          // setInputValue(newInputValue);\n        // }}\n        id=\"controllable-states-demo\"\n        options={['Yes','No']}\n        style={{ width: '50%', margin: '10px' }}\n        renderInput={(params) => <TextField {...params} label=\"Tint\" variant=\"outlined\" />}\n      />\n        <Autocomplete\n          // value={value}\n          // onChange={(event, newValue) => {\n            // setValue(newValue);\n          // }}\n          // inputValue={inputValue}\n          // onInputChange={(event, newInputValue) => {\n            // setInputValue(newInputValue);\n          // }}\n          id=\"controllable-states-demo\"\n          options={['Metal','Plastic']}\n          style={{ width: '50%', margin: '10px' }}\n          renderInput={(params) => <TextField {...params} label=\"Material\" variant=\"outlined\" />}\n        />\n      <div style={{display: 'flex', width: '50%',  }} >\n        <Autocomplete\n          // value={value}\n          // onChange={(event, newValue) => {\n            // setValue(newValue);\n          // }}\n          // inputValue={inputValue}\n          // onInputChange={(event, newInputValue) => {\n            // setInputValue(newInputValue);\n          // }}\n          id=\"controllable-states-demo\"\n          options={['Yes','No']}\n          style={{ width: '50%', margin: '10px' }}\n          renderInput={(params) => <TextField {...params} label=\"OS Sphere *\" variant=\"outlined\" />}\n        />\n              <Autocomplete\n          // value={value}\n          // onChange={(event, newValue) => {\n            // setValue(newValue);\n          // }}\n          // inputValue={inputValue}\n          // onInputChange={(event, newInputValue) => {\n            // setInputValue(newInputValue);\n          // }}\n          id=\"controllable-states-demo\"\n          options={['Yes','No']}\n          style={{ width: '50%', margin: '10px' }}\n          renderInput={(params) => <TextField {...params} label=\"OD Sphere *\" variant=\"outlined\" />}\n        />\n      </div>\n      <div style={{display: 'flex', width: '50%', }} >\n        <Autocomplete\n          // value={value}\n          // onChange={(event, newValue) => {\n            // setValue(newValue);\n          // }}\n          // inputValue={inputValue}\n          // onInputChange={(event, newInputValue) => {\n            // setInputValue(newInputValue);\n          // }}\n          id=\"controllable-states-demo\"\n          options={['Yes','No']}\n          style={{ width: '50%', margin: '10px' }}\n          renderInput={(params) => <TextField {...params} label=\"OS Cylinder *\" variant=\"outlined\" />}\n        />\n              <Autocomplete\n          // value={value}\n          // onChange={(event, newValue) => {\n            // setValue(newValue);\n          // }}\n          // inputValue={inputValue}\n          // onInputChange={(event, newInputValue) => {\n            // setInputValue(newInputValue);\n          // }}\n          id=\"controllable-states-demo\"\n          options={['Yes','No']}\n          style={{ width: '50%', margin: '10px' }}\n          renderInput={(params) => <TextField {...params} label=\"OD Cylinder *\" variant=\"outlined\" />}\n        />\n      </div>\n      <div style={{display: 'flex', width: '50%' }} >\n        <Autocomplete\n          // value={value}\n          // onChange={(event, newValue) => {\n            // setValue(newValue);\n          // }}\n          // inputValue={inputValue}\n          // onInputChange={(event, newInputValue) => {\n            // setInputValue(newInputValue);\n          // }}\n          id=\"controllable-states-demo\"\n          options={['Yes','No']}\n          style={{ width: '50%', margin: '10px' }}\n          renderInput={(params) => <TextField {...params} label=\"OS Axis *\" variant=\"outlined\" />}\n        />\n              <Autocomplete\n          // value={value}\n          // onChange={(event, newValue) => {\n            // setValue(newValue);\n          // }}\n          // inputValue={inputValue}\n          // onInputChange={(event, newInputValue) => {\n            // setInputValue(newInputValue);\n          // }}\n          id=\"controllable-states-demo\"\n          options={['Yes','No']}\n          style={{ width: '50%', margin: '10px' }}\n          renderInput={(params) => <TextField {...params} label=\"OD Axis *\" variant=\"outlined\" />}\n        />\n      </div>\n      <div style={{display: 'flex', width: '50%', }} >\n        <Autocomplete\n          // value={value}\n          // onChange={(event, newValue) => {\n            // setValue(newValue);\n          // }}\n          // inputValue={inputValue}\n          // onInputChange={(event, newInputValue) => {\n            // setInputValue(newInputValue);\n          // }}\n          id=\"controllable-states-demo\"\n          options={['Yes','No']}\n          style={{ width: '50%', margin: '10px' }}\n          renderInput={(params) => <TextField {...params} label=\"OD Add *\" variant=\"outlined\" />}\n        />\n        <Autocomplete\n          // value={value}\n          // onChange={(event, newValue) => {\n            // setValue(newValue);\n          // }}\n          // inputValue={inputValue}\n          // onInputChange={(event, newInputValue) => {\n            // setInputValue(newInputValue);\n          // }}\n          id=\"controllable-states-demo\"\n          options={['Yes','No']}\n          style={{ width: '50%', margin: '10px' }}\n          renderInput={(params) => <TextField {...params} label=\"OS Add *\" variant=\"outlined\" />}\n        />\n\n      </div>\n      {/* <div style={{display: 'flex', width: '50%', margin: '10px' }} > */}\n      <Button style={{ width: '50%', margin: '10px' }} color='primary' variant='contained' >Search</Button>\n      {/* <Button style={{ width: '50%', margin: '10px' }} color='secondary' variant='contained' >Cancel</Button> */}\n      {/* </div> */}\n    </div>\n  );\n}\n\nexport default Search;\n","import { makeStyles, useTheme } from '@material-ui/core/styles';\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      width: '100%',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    whiteColor: {\n      color: \"white\",\n      padding: '10px'\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      paddingTop: '64px',\n      width: '100%',\n      height: '100%',\n    },\n  }));\n\n  export {\n    useStyles\n  }","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport {Add} from '../Sections/Add';\nimport {Search} from '../Sections/Search';\nimport {useStyles} from './css';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport Select from '@material-ui/core/Select';\n\n\n\n\nfunction RenderAppSection(appSection) {\n  switch (appSection) {\n    case 'Search':\n      return <Search/>\n      break;\n    case 'Add':\n      return <Add/>\n      break;\n    case 'Analysis':\n      return 'Analysis'\n      break;\n    case 'Profile':\n      return 'Profile'\n      break;\n    case 'Organization':\n      return 'Organization'\n      break;\n    case 'Admin Settings':\n      return 'Admin Settings'\n      break;\n    default:\n      return 'Error'\n      break;\n  }\n}\n\nconst drawerWidth = 240;\n\n\n\nexport default function NewHomePage() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n  const [appSection, setAppSection] = React.useState('Add');\n\n  const handleSidePannelClick = (e) => {\n    console.log(e);\n    console.log(e.target);\n    console.log(e.target.textContent);\n    console.log(e.target.id);\n    console.log(e.target.key);\n    setAppSection(e.target.textContent);\n  };\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Glasses Tracker | \n          </Typography>\n          <Select               \n              value={'Friends of ASAPROSAR'}\n              classes={{\n                root: classes.whiteColor,\n                icon: classes.whiteColor\n              }} > \n            <option value={'Friends of ASAPROSAR'}>Friends of ASAPROSAR</option>\n            {/* <option value={true}>another one</option> */}\n\n          </Select>\n          <div id='something' style={{display : 'flex', flex: '1', width: '100%', alignItems: 'flex-end', justifyContent: 'flex-end'}}>\n            <IconButton>\n              <Avatar>D</Avatar>\n            </IconButton>\n            </div>\n          {/* <Avatar>D</Avatar> */}\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n        <ListItem button key='Search' onClick={handleSidePannelClick}>\n              <ListItemIcon className={classes.listItemDisable} ><SearchIcon /></ListItemIcon>\n              <ListItemText primary='Search' onClick={handleSidePannelClick}/>\n            </ListItem>\n            <ListItem button key='Add' onClick={handleSidePannelClick}>\n              <ListItemIcon><AddCircleOutlineIcon /></ListItemIcon>\n              <ListItemText primary='Add' />\n            </ListItem>\n            <ListItem button key='Analysis' onClick={handleSidePannelClick}>\n              <ListItemIcon ><AssessmentIcon /></ListItemIcon>\n              <ListItemText primary='Analysis' />\n            </ListItem>\n        </List>\n        <Divider />\n        <List>\n        <ListItem button key='Admin Settings' onClick={handleSidePannelClick}>\n              <ListItemIcon disabled ><SettingsIcon /></ListItemIcon>\n              <ListItemText disabled primary='Admin Settings' />\n            </ListItem>\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        {/* <div className={classes.toolbar} /> */}\n        {RenderAppSection(appSection)}\n          {/* <Add/> */}\n       \n      </main>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/glasses.3d8efdfd.svg\";","import glasses from '../../resources/glasses.svg';\nimport SvgIcon from '@material-ui/core/SvgIcon';\n\nfunction GlassesIcon(props) {\n  return (\n      <img src={glasses} style={{color: 'white', \n                                //  margin : '10px', \n                                 width: \n                                 props.size, \n                                 height: props.size\n                                 }}/>\n  );\n}\n\nexport default GlassesIcon;\n","export default __webpack_public_path__ + \"static/media/G_Logo.0ff45cb6.png\";","import googleIcon from '../../resources/G_Logo.png';\n// import SvgIcon from '@material-ui/core/SvgIcon';\n\nfunction GlassesIcon(props) {\n  return (\n      <img src={googleIcon} style={{color: 'white', \n                                //  margin : '10px', \n                                 width: \n                                 props.size, \n                                 height: props.size\n                                 }}/>\n  );\n}\n\nexport default GlassesIcon;\n","import './Login.css';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport LockIcon from '@material-ui/icons/Lock';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Button from '@material-ui/core/Button';\nimport GlassesIcon from '../../CustomIcons/GlassesIcon';\nimport GoogleIcon from '../../CustomIcons/GoogleIcon';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\nfunction Login() {\n  const classes = useStyles();\n  return (\n\n\n    <div className=\"Login\">\n      <div className=\"Login-card \">\n      <GlassesIcon size='100px' />\n      <Typography variant=\"h4\" color='textPrimary'>Glasses Tracker</Typography>\n      <FormControl  className={classes.margin} variant=\"outlined\">\n          <InputLabel htmlFor=\"outlined-adornment-amount\">Email</InputLabel>\n          <OutlinedInput\n            id=\"outlined-adornment-amount\"\n            // value={values.amount}\n            // onChange={handleChange('amount')}\n            startAdornment={<InputAdornment position=\"start\"><AccountCircle/></InputAdornment>}\n            labelWidth={40}\n          />\n        </FormControl>\n        <FormControl  className={classes.margin} variant=\"outlined\">\n          <InputLabel htmlFor=\"outlined-adornment-amount\" >Password</InputLabel>\n          <OutlinedInput\n            id=\"outlined-adornment-amount\"\n            type='password'\n            // value={values.amount}\n            // onChange={handleChange('amount')}\n            startAdornment={<InputAdornment position=\"start\"><LockIcon/></InputAdornment>}\n            labelWidth={70}\n          />\n        <Button\n        variant=\"contained\"\n        color=\"default\"\n        className={classes.button}\n        // startIcon={<GoogleIcon size='20px' />}\n      >\n        Sign in</Button>\n        OR\n        <Button\n        variant=\"contained\"\n        color=\"default\"\n        className={classes.button}\n        startIcon={<GoogleIcon size='20px' />}\n      >\n      \n        Sign in with google</Button>\n        </FormControl>\n\n\n      <Typography variant=\"caption text\" color='textPrimary'>\n        <Link href=\"#\" >\n          I need an account! \n        </Link>\n      </Typography>\n        \n      </div>\n\n    </div>\n  );\n}\n\nexport default Login;\n","import './SignUp.css';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport LockIcon from '@material-ui/icons/Lock';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Button from '@material-ui/core/Button';\nimport GlassesIcon from '../../CustomIcons/GlassesIcon';\nimport GoogleIcon from '../../CustomIcons/GoogleIcon';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\nfunction SignUp() {\n  const classes = useStyles();\n  return (\n\n\n    <div className=\"SignUp\">\n      <div className=\"SignUp-card \">\n      <GlassesIcon size='100px' />\n      <Typography variant=\"h4\" color='textPrimary'>Glasses Tracker</Typography>\n      {/* <Typography variant=\"caption text\" color='textPrimary'>Sign up to get started!</Typography> */}\n      <FormControl  className={classes.margin} variant=\"outlined\">\n          <InputLabel htmlFor=\"outlined-adornment-amount\">Email</InputLabel>\n          <OutlinedInput\n            id=\"outlined-adornment-amount\"\n            // value={values.amount}\n            // onChange={handleChange('amount')}\n            startAdornment={<InputAdornment position=\"start\"><AccountCircle/></InputAdornment>}\n            labelWidth={40}\n          />\n        </FormControl>\n        <FormControl  className={classes.margin} variant=\"outlined\">\n          <InputLabel htmlFor=\"outlined-adornment-amount\" >Password</InputLabel>\n          <OutlinedInput type='password'\n            id=\"outlined-adornment-amount\"\n            // value={values.amount}\n            // onChange={handleChange('amount')}\n            startAdornment={<InputAdornment position=\"start\"><LockIcon/></InputAdornment>}\n            labelWidth={70}\n          />\n        </FormControl>\n        <FormControl  className={classes.margin} variant=\"outlined\">\n        <InputLabel htmlFor=\"outlined-adornment-amount\" >Re-Password</InputLabel>\n          <OutlinedInput type='password'\n            id=\"outlined-adornment-amount\"\n            // value={values.amount}\n            // onChange={handleChange('amount')}\n            startAdornment={<InputAdornment position=\"start\"><LockIcon/></InputAdornment>}\n            labelWidth={95}\n          />\n        </FormControl>\n        <Button\n        variant=\"contained\"\n        color=\"default\"\n        className={classes.button}\n        // startIcon={<GoogleIcon size='20px' />}\n      >\n        Sign Up</Button>\n        OR\n        <Button\n        variant=\"contained\"\n        color=\"default\"\n        className={classes.button}\n        startIcon={<GoogleIcon size='20px' />}\n      >\n      \n        Sign in with google</Button>\n      <Typography variant=\"caption text\" color='textPrimary'>\n        <Link href=\"#\" >\n          I already have an account! \n        </Link>\n      </Typography>\n      </div>\n\n    </div>\n  );\n}\n\nexport default SignUp;\n","// import logo from '../../resources/glasses.svg';\nimport './App.css';\nimport  { HomePage } from '../HomePage';\nimport  { NewHomePage } from '../NewHomePage';\nimport  { Login } from '../AuthenticationPages/Login';\nimport  { SignUp } from '../AuthenticationPages/SignUp';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/signup\">\n            <SignUp/>\n          </Route>\n          <Route path=\"/login\">\n            <Login/>\n          </Route>\n          <Route path=\"/\">\n            <NewHomePage/>\n          </Route>\n          <Route path=\"/old\">\n            <HomePage/>\n          </Route>\n        </Switch>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport  { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}